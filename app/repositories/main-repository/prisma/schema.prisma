// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model User {
  email        String         @unique
  profiles      Profile[]

  displayName String
  avatarUrl   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

enum Role {
  USER
  ADMIN
}

model Profile {
  userEmail      String       
  user           User         @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  organizationSlug String        
  organization   Organization @relation(fields: [organizationSlug], references: [slug], onDelete: Cascade)

  role Role

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@unique([userEmail, organizationSlug])
}

model Organization {
  slug     String  @id @unique
  name     String
  profiles  Profile[]
  invites  OrganizationInvite[]
  offices Office[]

  invitationHash String? @unique

  description String?
  thumbnail String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([invitationHash])
}

model OrganizationInvite {
  expiresAt DateTime
  email String

  organizationSlug String
  organization  Organization @relation(fields: [organizationSlug], references: [slug], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, organizationSlug])
}

model Office {
  slug String @id @unique
  name String
  spaceUrl String

  organizationSlug String
  organization  Organization @relation(fields: [organizationSlug], references: [slug], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([organizationSlug, slug])
}