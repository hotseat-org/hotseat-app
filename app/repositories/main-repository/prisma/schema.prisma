// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  PK              Int           @id @default(autoincrement())
  id              String        @unique @default(uuid()) @db.VarChar(36)

  email           String        @unique
  profiles         Profile[]
  organizations   Organization[]

  displayName     String
  avatarUrl       String?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Profile {
  PK              Int           @id @default(autoincrement())

  userPK          Int
  user            User          @relation(fields: [userPK], references: [PK])
  organizationPK  Int
  organization    Organization  @relation(fields: [organizationPK], references: [PK])

  residentSeat    Seat?
  reservations    Reservation[]

  displayName     String
  avatarUrl       String?

  role            Role

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Organization {
  PK           Int           @id @default(autoincrement())

  name         String        @unique
  slug         String        @unique
  members      User[]
  profiles      Profile[]
  spaces       Space[]

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Seat {
  PK            Int           @id @default(autoincrement())
  id            String        @unique @default(uuid()) @db.VarChar(36)

  furnitureId   String        @unique
  reservations  Reservation[]
  residentPK    Int?          @unique
  resident      Profile?       @relation(fields: [residentPK], references: [PK])
  spacePK       Int
  space         Space         @relation(fields: [spacePK], references: [PK])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Reservation {
  PK        Int      @id @default(autoincrement())
  id        String   @unique @default(uuid()) @db.VarChar(36)

  from      DateTime
  to        DateTime
  byPK      Int      @unique
  by        Profile   @relation(fields: [byPK], references: [PK])
  seatPK    Int
  seat      Seat     @relation(fields: [seatPK], references: [PK])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  PK        Int    @id @default(autoincrement())
  id        String @unique @default(uuid()) @db.VarChar(36)

  name      String
  space     Space  @relation(fields: [spacePK], references: [PK])
  spacePK   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Space {
  PK              Int     @id @default(autoincrement())
  id              String  @unique @default(uuid()) @db.VarChar(36)

  organizationPK  Int @unique
  organization    Organization @relation(fields: [organizationPK], references: [PK])
  name            String  @unique
  spaceId         String
  description     String?
  rooms           Room[]
  seats           Seat[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
